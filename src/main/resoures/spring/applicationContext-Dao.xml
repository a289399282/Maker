<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"        
    xmlns:mvc="http://www.springframework.org/schema/mvc"     
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"              
    xsi:schemaLocation="                                               
            http://www.springframework.org/schema/beans    
            http://www.springframework.org/schema/beans/spring-beans.xsd    
            http://www.springframework.org/schema/context     
            http://www.springframework.org/schema/context/spring-context.xsd    
            http://www.springframework.org/schema/mvc    
            http://www.springframework.org/schema/mvc/spring-mvc.xsd  
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx.xsd  
            http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop.xsd "  >

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties"/>
	
	<!-- 配置数据库连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
    	<property name="url" value="jdbc:mysql://localhost:3307/maker?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true"></property>
    	<!-- <property name="url" value="${jdbc.url}"></property> -->
    	<property name="username" value="${jdbc.username}"></property>
    	<property name="password" value="${jdbc.password}"></property>
    	<!-- maxActive是最大激活连接数，这里取值为20，表示同时最多有20个数据库连接 -->
    	<property name="maxActive" value="30"></property>
    	<!-- maxIdle是最大的空闲连接数，这里取值为20，表示即使没有数据库连接时依然可以保持20空闲的连接，而不被清除，随时处于待命状态。 -->
    	<property name="maxIdle" value="2"></property>
	</bean>

	<!-- 配置sqlSessinFactory -->
	<bean id="sqlSessinFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
		<!-- 扫描mapper的xml文件 -->
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册 
		遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录 中
		自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描mapper中的java文件
		指定扫描的包名 如果扫描多个包，每个包中间使用半角逗号分隔-->
		<property name="basePackage" value="com.gdpi.maker.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessinFactory"></property>
	</bean>

</beans>
